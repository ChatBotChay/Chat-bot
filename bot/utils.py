async def send_dish_card_to_tech_group(bot, dish: dict):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É –±–ª—é–¥–∞ –≤ —Ç–µ—Ö. –≥—Ä—É–ø–ø—É.
    dish: dict —Å –∫–ª—é—á–∞–º–∏ name, description, ingredients, photo_path, video_path (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    """
    tech_group_id = settings.TECH_GROUP
    if not tech_group_id:
        raise ValueError("TECH_GROUP –Ω–µ –∑–∞–¥–∞–Ω –≤ .env")
    text = f"üçΩ <b>{dish['name']}</b>\n\n"
    if dish.get('description'):
        text += f"<i>{dish['description']}</i>\n\n"
    if dish.get('ingredients'):
        text += f"–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: {dish['ingredients']}\n\n"
    from aiogram.types.input_file import FSInputFile
    if dish.get('video_path'):
        media = FSInputFile(dish['video_path'])
        msg = await bot.send_video(chat_id=int(tech_group_id), video=media, caption=text, parse_mode="HTML")
    elif dish.get('photo_path'):
        media = FSInputFile(dish['photo_path'])
        msg = await bot.send_photo(chat_id=int(tech_group_id), photo=media, caption=text, parse_mode="HTML")
    else:
        msg = await bot.send_message(chat_id=int(tech_group_id), text=text, parse_mode="HTML")
    return msg.message_id
# async def send_dish_card_to_tech_group(bot, dish: dict):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É –±–ª—é–¥–∞ –≤ —Ç–µ—Ö. –≥—Ä—É–ø–ø—É.
    dish: dict —Å –∫–ª—é—á–∞–º–∏ name, description, ingredients, photo_path, video_path (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    """
    tech_group_id = settings.TECH_GROUP
    if not tech_group_id:
        raise ValueError("TECH_GROUP –Ω–µ –∑–∞–¥–∞–Ω –≤ .env")
    text = f"üçΩ <b>{dish['name']}</b>\n\n"
    if dish.get('description'):
        text += f"<i>{dish['description']}</i>\n\n"
    if dish.get('ingredients'):
        text += f"–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: {dish['ingredients']}\n\n"
    from aiogram.types.input_file import FSInputFile
    if dish.get('video_path'):
        media = FSInputFile(dish['video_path'])
        msg = await bot.send_video(chat_id=int(tech_group_id), video=media, caption=text, parse_mode="HTML")
    elif dish.get('photo_path'):
        media = FSInputFile(dish['photo_path'])
        msg = await bot.send_photo(chat_id=int(tech_group_id), photo=media, caption=text, parse_mode="HTML")
    else:
        msg = await bot.send_message(chat_id=int(tech_group_id), text=text, parse_mode="HTML")
    return msg.message_id
import os
from moviepy.video.VideoClip import ImageClip
from moviepy.audio.io.AudioFileClip import AudioFileClip
from config import settings

def make_video_from_image_and_audio(image_path: str, audio_path: str, output_path: str, duration: int = None):
    """
    –°–æ–∑–¥–∞—ë—Ç –≤–∏–¥–µ–æ –∏–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏ –∞—É–¥–∏–æ.
    image_path: –ø—É—Ç—å –∫ –∫–∞—Ä—Ç–∏–Ω–∫–µ
    audio_path: –ø—É—Ç—å –∫ –∞—É–¥–∏–æ—Ñ–∞–π–ª—É
    output_path: –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è mp4
    duration: –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ (–µ—Å–ª–∏ None ‚Äî –±–µ—Ä—ë—Ç—Å—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞—É–¥–∏–æ)
    """
    audio = AudioFileClip(audio_path)
    img = ImageClip(image_path)
    if duration is None:
        duration = audio.duration
    img = img.with_duration(duration)
    img = img.with_audio(audio)
    img = img.with_fps(24)
    img.write_videofile(output_path, codec="libx264", audio_codec="aac")
    return output_path

async def send_video_to_tech_group(bot, video_path: str):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∏–¥–µ–æ –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –≥—Ä—É–ø–ø—É.
    bot: —ç–∫–∑–µ–º–ø–ª—è—Ä aiogram.Bot
    video_path: –ø—É—Ç—å –∫ mp4
    """
    tech_group_id = settings.TECH_GROUP
    if not tech_group_id:
        raise ValueError("TECH_GROUP –Ω–µ –∑–∞–¥–∞–Ω –≤ .env")
    from aiogram.types.input_file import FSInputFile
    input_file = FSInputFile(video_path)
    msg = await bot.send_video(chat_id=int(tech_group_id), video=input_file)
    return msg.video.file_id

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
# video_id = await send_video_to_tech_group(bot, output_path)
# –°–æ—Ö—Ä–∞–Ω–∏ video_id –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –±–ª—é–¥–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
